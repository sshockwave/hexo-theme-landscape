<% if (config.disqus_shortname){ %>
<script>
  var disqus_shortname = '<%= config.disqus_shortname %>';
  <% if (page.permalink){ %>
    var disqus_url = '<%= page.permalink %>';
  <% } %>
  (function(){
    var dsq = document.createElement('script');
    dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/<% if (page.comments) { %>embed.js<% } else { %>count.js<% } %>';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
  })();
</script>
<% } %>

<%- partial('gauges-analytics') %>

<% if(theme.valine.enable && theme.valine.appId && theme.valine.appKey){ %>
  <script src="//cdn1.lncld.net/static/js/3.0.4/av-min.js"></script>
  <script src="//unpkg.com/valine/dist/Valine.min.js"></script>
  <script>
    var GUEST_INFO = ['nick','mail','link'];
    var guest_info = '<%= theme.valine.guest_info %>'.split(',').filter(function(item){
        return GUEST_INFO.indexOf(item) > -1
    });
    var notify = '<%= theme.valine.notify %>' == true;
    var verify = '<%= theme.valine.verify %>' == true;
    new Valine({
        el: '.vcomment',
        notify: notify,
        verify: verify,
        appId: "<%= theme.valine.appId %>",
        appKey: "<%= theme.valine.appKey %>",
        placeholder: "<%= theme.valine.placeholder %>",
        pageSize:'<%= theme.valine.pageSize %>',
        avatar:'<%= theme.valine.avatar %>',
        lang:'<%= theme.valine.lang %>'
    });
  </script>
<% } %>

<% if (config.algolia) { %>
  <script src="https://cdn.jsdelivr.net/npm/instantsearch.js@2.10.1"></script>
  <script>
    const search = instantsearch({
      appId: '<%= config.algolia.applicationID %>',
      apiKey: '<%= config.algolia.apiKey %>',
      indexName: '<%= config.algolia.indexName %>',
      routing: true,
    });

    search.addWidget(
      instantsearch.widgets.searchBox({
        container: '#search-box',
        magnifier: false,
        reset: false,
        wrapInput: false,
      })
    );

    function renderDate(date) {
      date = new Date(date);
      return `<li>
        ${date.getFullYear()}年${date.getMonth() + 1}月${date.getDate()}日
      </li>`;
    }
    function renderCategories(categories) {
      if (!categories) {
        return '';
      }
      return `
      <li>
        <ul class="breadcrumb d-inline-block">
          ${categories.map(category => `
            <li class="breadcrumb-item">
              <a href="${category.path}">${category.name}</a>
            </li>
          `).join('')}
        </ul>
      </li>
      `;
    }
    function renderTags(tags) {
      if (!tags) {
        return '';
      }
      return `
      <li>
        ${tags.map(tag => `
          <span class="label label-rounded">
            <a href="${tag.path}">${tag.name}</a>
          </span>
        `).join('')}
      </li>
      `;
    }
    search.addWidget(
      instantsearch.widgets.infiniteHits({
        container: '#hits',
        showMoreLabel: 'Show more results',
        cssClasses: {
          showmoreButton: ['btn', 'btn-link', 'centered'],
        },
        templates: {
          empty: `<p class="text-gray">No matched results.</p>`,
          item: record => `
          <article class="tile tile-centered">
            <div class="tile-content">
              <div class="title-subtitle text-gray">
                <ul class="meta">
                  <li>
                    <a href="${record.permalink}">阅读</a>
                  </li>
                  ${renderDate(record.date)}
                  ${renderCategories(record.categories)}
                  ${renderTags(record.tags)}
                </ul>
              </div>
              <div class="tile-title">
                <p class="h5">${record.title}</p>
              </div>
            </div>
          </article>
          `,
        },
      })
    );

    search.addWidget({
      render: (function() {
        const hits = document.getElementById('hits');
        const searchBox = document.getElementById('search-box');
        const contentBody = document.getElementById('content-body');
        return function(opts) {
          hits.style.display = searchBox.value !== '' ? 'block' : 'none';
          contentBody.style.display = searchBox.value === '' ? 'block' : 'none';
        }
      })(),
    });

    search.start();
  </script>
<% } %>
